before_script:
  # If during build on WindowsDesktop runner, you get some errors about long of file for example: 
  # "error: unable to create file... : Filename too long "
  # run your build with this command once ( on linux machine this will cause an error: Permission denied )
  #- git config --system core.longpaths true
  #- git config --local include.path "$PWD"/.gitconfig
  # If you encounter error:
  # 'fatal: Could not read from remote repository.'
  # It is possible that WindowsDesktop runner doesn't have set USERPROFILE
  # It needs to be setted through script, for example:
  - set USERPROFILE=C:\Users\gitlab-runner

  - git submodule sync --recursive
  - git submodule update --init --recursive 
  - git submodule foreach git pull origin master
  #- git submodule foreach --recursive git checkout master && git pull origin master



stages:
  - wizard
  - installers
  - deploy


generate_wizard:
  stage: wizard
  script: scripts/wizard_generator/generator.sh > wizard.json
  tags:
  - LinuxDesktop
  artifacts:
    paths:
    - wizard.json
    #expire_in: 20 minutes


build_linux_wizard_installer:
  stage: installers
  variables:
    MILO_SERVER: "https://seafile.milosolutions.com"
  script:
    - rm -f ./installer.run
    - ./scripts/wizard_generator/create_installer.sh ./installer.run /home/tools/Qt-OpenSource/Tools/QtInstallerFramework/3.0/bin/binarycreator
  tags:
    - LinuxDesktop
  artifacts:
    paths:
    - installer.run
    expire_in: 20 minutes

build_windows_wizard_installer:
  stage: installers
  variables:
    MILO_SERVER: "https://seafile.milosolutions.com"
  script:
    - erase installer.exe
    - powershell -File ./scripts/wizard_generator/CreateWinInstaller.ps1 installer.exe "C:\Tools\Qt-OpenSource\Tools\QtInstallerFramework\3.0\bin\binarycreator.exe"
  tags:
    - WindowsDesktop
  artifacts:
    paths:
    - installer.exe
    expire_in: 20 minutes

deploy_linux_installer:
  stage: deploy
  variables:
    DOMAIN: "https://seafile.milosolutions.com"
  script:
    - OUTPUT=./build/miloWizardInstaller_$(date +%Y.%m.%d).run
    - mv ./installer.run $OUTPUT
    - ./scripts/upload_to_seafile.sh -f $OUTPUT -s $DOMAIN -r $MILOCODEDATABASE_SEAFILE_REPO -t $SEAFILE_TOKEN
  tags:
    - LinuxDesktop

deploy_windows_installer:
  stage: deploy
  variables:
    DOMAIN: "https://seafile.milosolutions.com"
  script:
    - OUTPUT=./build/miloWizardInstaller_$(date +%Y.%m.%d).exe
    - mv ./installer.exe $OUTPUT
    - ./scripts/upload_to_seafile.sh -f $OUTPUT -s $DOMAIN -r $MILOCODEDATABASE_SEAFILE_REPO -t $SEAFILE_TOKEN
  tags:
    - LinuxDesktop

build_docs:
  stage: deploy
  script:
    # run doxygen with the appropriate doxyfile
    - doxygen $CI_PROJECT_NAME.doxyfile

    # move generated documentation to qtdocs/milo-code-db/$CI_PROJECT_NAME
    - rm -rf /opt/online_docs/www/docs_open_source/milo-code-db/doc
    - cp doc /opt/online_docs/www/docs_open_source/milo-code-db/doc
    - rm -f /opt/online_docs/www/docs_open_source/milo-code-db/index.html
    - cp index.html /opt/online_docs/www/docs_open_source/milo-code-db/index.html
  tags:
    - Docs